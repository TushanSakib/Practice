class Employee:
    raise_amount = 1.04
    def __init__(self,first,last,pay):
        self.first = first
        self.last = last
        self.pay = pay
        self.email = first + '.' + last +'@gmail.com'
    def fullname(self):
        return '{} {}'.format(self.first,self.last)

    def apply_raise(self):
        self.pay = int(self.pay * self.raise_amount)

class Developer(Employee):
    raise_amount = 1.10

    def __init__(self, first, last, pay, prong_lang):
        super().__init__(first,last,pay)
        self.prog_lang = prong_lang

class Manager(Employee):
    def __init__(self, first, last, pay, employee=None):
        super().__init__(first,last,pay)
        if employee is None:
            self.employee=[]
        else:
            self.employee = employee

    def add_employee(self,emp):
        if emp not in self.employee:
            self.employee.append(emp)

    def remove_employee(self,emp):
        if emp in self.employee:
            self.employee.remove(emp)

    def print_employee(self):
        for emp in self.employee:
            print('-->',emp.fullname())



dev_1 = Developer('Corey','Schafer',50000,'Python')
dev_2 = Developer('Test','User',200000,'Java')


mgr_1 = Manager('Sue','Smith',90000000,[dev_1])
print(mgr_1.__dict__)
mgr_1.add_employee(dev_2)
mgr_1.print_employee()



print(dev_1.email)
print(dev_2.prog_lang)



print(dev_1.email)
print(dev_2.pay)
dev_1.apply_raise()
print(dev_1.pay)







